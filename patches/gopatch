diff --git a/terminal/runereader_posix.go b/terminal/runereader_posix.go
index 563a081..87d9d6d 100644
--- a/terminal/runereader_posix.go
+++ b/terminal/runereader_posix.go
@@ -14,7 +14,8 @@ import (
        "bytes"
        "fmt"
        "syscall"
-       "unsafe"
+
+       "golang.org/x/sys/unix"
 )

 const (
@@ -23,7 +24,7 @@ const (
 )

 type runeReaderState struct {
-       term   syscall.Termios
+       term   unix.Termios
        reader *bufio.Reader
        buf    *bytes.Buffer
 }
@@ -36,7 +37,7 @@ func newRuneReaderState(input FileReader) runeReaderState {
                        Buffer: buf,
                }),
                buf: buf,
-       }
+}
 }

 func (rr *RuneReader) Buffer() *bytes.Buffer {
@@ -45,11 +46,13 @@ func (rr *RuneReader) Buffer() *bytes.Buffer {

 // For reading runes we just want to disable echo.
 func (rr *RuneReader) SetTermMode() error {
-       if _, _, err := syscall.Syscall6(syscall.SYS_IOCTL, uintptr(rr.stdio.In.Fd()), ioctlReadTermios, uintptr(unsafe.Pointer(&rr.state.term)), 0, 0, 0); err != 0 {
+        term, err := unix.IoctlGetTermios(int(rr.stdio.In.Fd()), unix.TCGETS)
+        if err != nil {
                return err
        }
+       rr.state.term = *term
+       newState := *term

-       newState := rr.state.term
        newState.Lflag &^= syscall.ECHO | syscall.ECHONL | syscall.ICANON | syscall.ISIG
        // Because we are clearing canonical mode, we need to ensure VMIN & VTIME are
        // set to the values we expect. This combination puts things in standard
@@ -57,7 +60,7 @@ func (rr *RuneReader) SetTermMode() error {
        newState.Cc[syscall.VMIN] = 1
        newState.Cc[syscall.VTIME] = 0

-       if _, _, err := syscall.Syscall6(syscall.SYS_IOCTL, uintptr(rr.stdio.In.Fd()), ioctlWriteTermios, uintptr(unsafe.Pointer(&newState)), 0, 0, 0); err != 0 {
+       if err := unix.IoctlSetTermios(int(rr.stdio.In.Fd()), unix.TCSETS, &newState); err != nil {
                return err
        }

@@ -65,7 +68,7 @@ func (rr *RuneReader) SetTermMode() error {
 }

 func (rr *RuneReader) RestoreTermMode() error {
-       if _, _, err := syscall.Syscall6(syscall.SYS_IOCTL, uintptr(rr.stdio.In.Fd()), ioctlWriteTermios, uintptr(unsafe.Pointer(&rr.state.term)), 0, 0, 0); err != 0 {
+       if err := unix.IoctlSetTermios(int(rr.stdio.In.Fd()), unix.TCSETS, &rr.state.term); err != nil {
                return err
        }
        return nil
